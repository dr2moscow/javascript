'use strict';

/* 1. Задать температуру в градусах по Цельсию. Вывести в alert соответствующую температуру в градусах по Фаренгейту.
      Подсказка: расчёт идёт по формуле: Tf = (9 / 5) * Tc + 32, где Tf – температура по Фаренгейту, Tc – температура по Цельсию
*/
{
    let Tc = 39;
    let Tf;

    Tf = (9 / 5) * Tc + 32;

    alert(`Температура ${Tc} градусов Целсии\nили ${Tf} градуса по Фаренгейту`);
}


/* Результат: 
    Температу 39 градусов Целсии,
    или 102 градуса по Фарентгейту 
*/


// 2. Работа с переменными
{
    var a = 100;
    var b = -1;
    var c = 100 / 20;
    var d = 5;
    var summ;

    d += d;
    summ = a + b + c + d;

    alert(`Значение переменных\na = ${a}\nb = ${b}\nc = ${c}\nd = ${d}\nsumm = ${summ}`);
}

// 3. Объявить две переменные: admin и name.Записать в name строку "Василий"; Скопировать значение из name в admin.Вывести admin(должно вывести «Василий»).
{
    let admin;
    let name = 'Василий';

    admin = name;

    alert(admin);
}

// Результат: Василий


// 4. * Чему будет равно JS - выражение 1000 + "108"

alert(1000 + "108");

// Результат: 1000108
// тип данных -  строка


// 5. * Самостоятельно разобраться с атрибутами тега script(async и defer)

/* Ответ:

Атрибут async - скрипт выполняется полностью асинхронно, браузер не останавливает обработку страницы, а спокойно работает дальше, когда скрипт будет загружен – он выполнится.
Атрибут defer - скрипт выполняется полностью асинхронно, браузер не останавливает обработку страницы, а спокойно работает дальше, скрипт defer сработает, когда весь HTML-документ будет обработан бразурем, а также  есть возможно сохранить порядок выполнения скриптов

! При одновременном указании async и defer в современных браузерах будет использован только async
! Атрибуты async/defer – только для внешних скриптов
*/
